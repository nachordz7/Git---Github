19. Suponiendo que acabamos de hacer un commit en un repositorio local. Dar los comandos necesarios para agregar
un nuevo remoto llamado work que apunte a https://github.com/user/repo.git. Luego subir el repositorio
local al remoto recién creado. El repositorio local tiene sólo una rama llamada main.

git remote add work https://github.com/user/repo.git
git push -u work main


20. Dar los comandos para configurar la identidad en git.

git config --global user.name
git config --global user.email


21. Dar los comandos para hacer un commit, agregando todos los archivos del directorio de trabajo al mismo.

git add .
git commit -m "mensaje del commit" 


22. Estamos trabajando en el archivo index.html en la rama master de nuestra web y nos piden que arreglemos
urgente un error de tipeo en la pagina about.html y subamos la nueva versión al remoto. Lo que está en
origin/master es la rama de “producción”. ¿Qué hacemos?

git checkout master
git add about.html
git commit -m "Fix typo in about.html"
git push origin master


23. Crear un repositorio llamado hola-mundo en GitHub. Poner al menos cinco ejemplos de programas “hello world”
en distintos lenguajes. Realizar un commit por cada ejemplo y agregar un README.md. En el README linkear cada
ejemplo con su archivo correspondiente.

24. Agregar un colaborador al repositorio del ejercicio anterior y pedirle que suba algún ejemplo que todavía no
tenemos. El colaborador debe realizar un commit agregando un nuevo archivo (el programa de ejemplo) y modificando el README.

25. Realizar un fork de algún repositorio hola-mundo de algún compañero que no nos dió acceso al mismo. Realizar
un pull request proponiendo un nuevo ejemplo.

26. Estamos trabajando en la rama new-feature, estuvimos editando archivos pero de repente necesitamos volver
a master y aplicar un parche de último momento a nuestra web. ¿Qué comandos de Git ejecutamos?

git checkout master 

echo "Fix parche" >> patch.html
git add patch.html
git commit -m "Apply emergency patch"
git push origin master


27. Estoy por hacer un commit con tres archivos: index.js, package.json y .env. Me arrepiento de los cambios
en .env y decido hacer el commit pero dejando .env tal como estaba en el último commit. Los archivos ya están
en el index. ¿Qué comandos ejecuto?

git restore --staged .env
git commit -m "Commit without .env"


28. Crear un nuevo repositorio y dentro del mismo dos ramas más además de master. Crear un archivo diferente en
cada rama y realizar un commit en cada una

git init nuevo-repo
cd nuevo-repo

echo "Archivo en master" > archivo_master.txt
git add archivo_master.txt
git commit -m "Add archivo_master.txt"

git checkout -b rama1
echo "Archivo en rama1" > archivo_rama1.txt
git add archivo_rama1.txt
git commit -m "Add archivo_rama1.txt"

git checkout master
git checkout -b rama2
echo "Archivo en rama2" > archivo_rama2.txt
git add archivo_rama2.txt
git commit -m "Add archivo_rama2.txt"
